#include <Keypad.h>
#include <LiquidCrystal_I2C.h>
#include <MFRC522.h>
#include <Servo.h>


#define SS_PIN 10
#define RST_PIN A2  

MFRC522 mfrc522(SS_PIN, RST_PIN);  


const byte ROW_NUM = 4; 
const byte COL_NUM = 4; 
char keys[ROW_NUM][COL_NUM] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte pin_rows[ROW_NUM] = {2, 3, 4, 5};  
byte pin_cols[COL_NUM] = {6, 7, 8, 9}; 

Keypad keypad = Keypad(makeKeymap(keys), pin_rows, pin_cols, ROW_NUM, COL_NUM);


LiquidCrystal_I2C lcd(0x27, 16, 2);


String correctPassword = "0000";  
String enteredPIN = "";          
String authorizedTag = "d3ca5aa8";  
bool rfidValid = false;          


Servo doorServo;
int servoPin = A1;  


unsigned long lastLcdUpdate = 0;
const unsigned long lcdUpdateInterval = 500;  

void setup() {
  Serial.begin(9600);
  SPI.begin();  
  mfrc522.PCD_Init();  
  Serial.println("RFID Reader Initialized");

  lcd.init();  
  lcd.backlight();  
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Scan RFID Card");

  doorServo.attach(servoPin);  
  doorServo.write(0);  
  Serial.println("System Ready");
}

void loop() {
  handleRFIDScanning();  

  
  if (millis() - lastLcdUpdate >= lcdUpdateInterval) {
    updateLcd();
    lastLcdUpdate = millis();
  }
}

void handleRFIDScanning() {
  if (mfrc522.PICC_IsNewCardPresent()) {
    Serial.println("Card detected");  

    if (mfrc522.PICC_ReadCardSerial()) {
      String rfidTag = "";
      for (byte i = 0; i < mfrc522.uid.size; i++) {
        rfidTag += String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : "");
        rfidTag += String(mfrc522.uid.uidByte[i], HEX);  
      }
      rfidTag.toLowerCase();  
      Serial.println("RFID Tag Read: " + rfidTag);  

      
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("RFID Scanned: ");
      lcd.setCursor(0, 1);
      lcd.print(rfidTag);

      
      if (rfidTag == authorizedTag) {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Enter PIN Code");
        Serial.println("RFID Access Granted - Enter PIN");

        
        enteredPIN = "";
        while (enteredPIN.length() < 4) {
          char key = keypad.getKey();
          if (key) {
            handleKeypadInput(key);  
          }
        }
        checkPIN();  
      } else {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Access Denied");
        Serial.println("Access Denied - Invalid RFID");
        delay(2000);
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Scan RFID Card");
      }
      mfrc522.PICC_HaltA(); 
      delay(2000);  
    }
  }
}

void handleKeypadInput(char key) {
  Serial.print("Key Pressed: ");
  Serial.println(key);
  if (key >= '0' && key <= '9') { 
    if (enteredPIN.length() < 4) {
      enteredPIN += key;
      lcd.setCursor(0, 1);
      lcd.print(enteredPIN);
    }
  } else if (key == '*') {  
    enteredPIN = "";
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Enter PIN Code");
  }
}

void checkPIN() {
  if (enteredPIN == correctPassword) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Access Granted");
    Serial.println("Access Granted");

    doorServo.write(90);  
    delay(5000);         
    doorServo.write(0);   
  } else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Access Denied");
    Serial.println("Access Denied - Invalid PIN");
    delay(2000);
  }
  enteredPIN = "";  
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Scan RFID Card");
}

void updateLcd() {
  if (enteredPIN.length() > 0) {
    lcd.setCursor(0, 1);
    lcd.print(enteredPIN);
  }
}
